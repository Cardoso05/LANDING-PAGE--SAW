{"version":3,"file":"static/js/280.d6327912.chunk.js","mappings":"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","sources":["components/CaseCarouselFullWidth.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst CaseCarouselFullWidth = ({ cases = [] }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isHovered, setIsHovered] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const intervalRef = useRef(null);\n  const progressIntervalRef = useRef(null);\n\n  // Auto-play functionality\n  useEffect(() => {\n    if (!isHovered && cases.length > 1) {\n      // Reset progress\n      setProgress(0);\n      \n      // Progress animation\n      progressIntervalRef.current = setInterval(() => {\n        setProgress(prev => {\n          if (prev >= 100) {\n            return 0;\n          }\n          return prev + (100 / 70); // 70 steps for 7 seconds (100ms intervals)\n        });\n      }, 100);\n      \n      // Slide change\n      intervalRef.current = setInterval(() => {\n        setCurrentIndex((prevIndex) => (prevIndex + 1) % cases.length);\n        setProgress(0); // Reset progress when changing slide\n      }, 7000);\n    } else {\n      setProgress(0);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      if (progressIntervalRef.current) {\n        clearInterval(progressIntervalRef.current);\n      }\n    };\n  }, [isHovered, cases.length, currentIndex]);\n\n  const goToSlide = (index) => {\n    setCurrentIndex(index);\n    setProgress(0); // Reset progress when manually changing slide\n  };\n\n  const handleMouseEnter = () => setIsHovered(true);\n  const handleMouseLeave = () => setIsHovered(false);\n\n  if (!cases || cases.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"case-carousel section--compact\" id=\"cases\">\n      <div className=\"container container--narrow\">\n        <header className=\"section-header\">\n          <span className=\"section-label\">Cases de Sucesso</span>\n          <h2 className=\"section-title\">Histórias Reais de Transformação</h2>\n          <p className=\"section-subtitle\">\n            Conheça empresas que já transformaram seus resultados com nossa automação inteligente\n          </p>\n        </header>\n      </div>\n\n      <div \n        className=\"case-carousel__wrapper\"\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        role=\"region\"\n        aria-roledescription=\"carousel\"\n        aria-label=\"Cases de sucesso\"\n      >\n        <div className=\"case-carousel__track\">\n          {cases.map((caseItem, index) => (\n            <article\n              key={index}\n              className={`case-slide ${index === currentIndex ? 'case-slide--active' : ''}`}\n              role=\"group\"\n              aria-label={`Case ${index + 1} de ${cases.length}`}\n              id={`case-${index}`}\n            >\n              <div className=\"container container--wide\">\n                <div className=\"case-slide__layout\">\n                  <div className=\"case-slide__content\">\n                    <div className=\"case-slide__text\">\n                      <h3 className=\"case-slide__title\">\n                        {caseItem.title}\n                      </h3>\n                      <p className=\"case-slide__description\">\n                        {caseItem.text}\n                      </p>\n                      <div className=\"case-slide__meta\">\n                        <span className=\"case-slide__category\">\n                          {caseItem.category || 'Automação Empresarial'}\n                        </span>\n                        <span className=\"case-slide__separator\">•</span>\n                        <span className=\"case-slide__result\">\n                          Resultado Comprovado\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"case-slide__visual\">\n                    <div className=\"case-slide__image-container\">\n                      <img\n                        src={caseItem.imageUrl}\n                                        alt={caseItem.altText || `Case de sucesso ${caseItem.title} - ${caseItem.result}`}\n                className=\"case-slide__image\"\n                loading={index === 0 ? 'eager' : 'lazy'}\n                      />\n                      <div className=\"case-slide__overlay\" aria-hidden=\"true\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </article>\n          ))}\n        </div>\n\n        {/* Navigation Bullets */}\n        {cases.length > 1 && (\n          <nav className=\"case-carousel__nav\" aria-label=\"Navegação de cases\">\n            <div className=\"container\">\n              <ul className=\"case-bullets\">\n                {cases.map((_, index) => (\n                  <li key={index}>\n                    <button\n                      className={`case-bullet ${index === currentIndex ? 'case-bullet--active' : ''}`}\n                      onClick={() => goToSlide(index)}\n                      aria-label={`Ir para case ${index + 1}`}\n                      aria-controls={`case-${index}`}\n                      type=\"button\"\n                    />\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </nav>\n        )}\n\n        {/* Progress Bar */}\n        <div className=\"case-carousel__progress\" aria-hidden=\"true\">\n          <div \n            className=\"case-carousel__progress-bar\"\n            style={{ width: `${progress}%` }}\n          />\n        </div>\n      </div>\n\n      {/* Screen Reader Status */}\n      <div \n        className=\"case-carousel__sr-status\"\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n      >\n        Case {currentIndex + 1} de {cases.length}: {cases[currentIndex]?.title}\n      </div>\n    </section>\n  );\n};\n\nexport default CaseCarouselFullWidth; "],"names":["_ref","_cases$currentIndex","cases","currentIndex","setCurrentIndex","useState","isHovered","setIsHovered","progress","setProgress","intervalRef","useRef","progressIntervalRef","useEffect","length","current","setInterval","prev","prevIndex","clearInterval","_jsxs","className","id","children","_jsx","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","role","map","caseItem","index","concat","title","text","category","src","imageUrl","alt","altText","result","loading","_","onClick","goToSlide","type","style","width"],"sourceRoot":""}