{"version":3,"file":"static/js/848.59e1c5f7.chunk.js","mappings":"8KAGA,MA8GA,EA9GyBA,KACvB,MAAOC,EAAeC,IAAoBC,EAAAA,EAAAA,UAAS,SAC5CC,EAAYC,IAAiBF,EAAAA,EAAAA,WAAS,GAEvCG,EAAW,CACf,CAAEC,GAAI,OAAQC,MAAO,aACrB,CAAED,GAAI,WAAYC,MAAO,iBACzB,CAAED,GAAI,QAASC,MAAO,SACtB,CAAED,GAAI,UAAWC,MAAO,YACxB,CAAED,GAAI,WAAYC,MAAO,eACzB,CAAED,GAAI,MAAOC,MAAO,SAGtBC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAeA,KACnB,MAAMC,EAAYC,OAAOC,QACzBR,EAAcM,EAAY,IAG1B,MACMG,EADWR,EAASS,KAAIC,GAAQC,SAASC,eAAeF,EAAKT,MACnCY,MAAKC,IACnC,IAAKA,EAAS,OAAO,EACrB,MAAMC,EAAOD,EAAQE,wBACrB,OAAOD,EAAKE,KAAO,KAAOF,EAAKG,OAAS,OAGtCV,GACFZ,EAAiBY,EAAeP,KAOpC,OAHAK,OAAOa,iBAAiB,SAAUf,GAClCA,IAEO,IAAME,OAAOc,oBAAoB,SAAUhB,KACjD,CAACJ,IAEJ,MAAMqB,EAAmBC,IACvB,MAAMC,EAAUZ,SAASC,eAAeU,GACpCC,GACFA,EAAQC,eAAe,CAAEC,SAAU,YAIvC,OACEC,EAAAA,EAAAA,KAAA,OACEC,UAAS,cAAAC,OAAgB9B,EAAa,uBAAyB,IAC/D+B,KAAK,aACL,aAAW,4BAAqBC,UAEhCJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWG,UACxBC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,sBAAqBG,SAAA,EAClCJ,EAAAA,EAAAA,KAAA,KACEM,KAAK,QACLL,UAAU,mBACVM,QAAUC,IACRA,EAAEC,iBACFd,EAAgB,SAElB,aAAW,+BAA2BS,SAErCM,EAAAA,EAAKC,IAAIC,QAGZZ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oBAAoBE,KAAK,UAASC,SAC7C9B,EAASS,KAAKC,IACbgB,EAAAA,EAAAA,KAAA,MAAkBG,KAAK,OAAMC,UAC3BJ,EAAAA,EAAAA,KAAA,UACEC,UAAS,oBAAAC,OAAsBjC,IAAkBe,EAAKT,GAAK,2BAA6B,IACxFgC,QAASA,IAAMZ,EAAgBX,EAAKT,IACpC4B,KAAK,WACL,6BAAAD,OAA4BlB,EAAKR,OACjC,eAAcP,IAAkBe,EAAKT,GAAK,YAASsC,EAAUT,SAE5DpB,EAAKR,SARDQ,EAAKT,SAclByB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBG,UAC9BJ,EAAAA,EAAAA,KAAA,KACEM,KAAK,OACLL,UAAU,8BACVM,QAAUC,IACRA,EAAEC,iBACFd,EAAgB,QAElB,aAAW,mBAAeS,SAC3B,kBAKHC,EAAAA,EAAAA,MAAA,UACEJ,UAAU,qBACV,aAAW,gCACX,gBAAc,QACd,gBAAc,WAAUG,SAAA,EAExBJ,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,YACAA,EAAAA,EAAAA,KAAA,qB","sources":["components/StickyNavigation.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport teks from '../data';\n\nconst StickyNavigation = () => {\n  const [activeSection, setActiveSection] = useState('home');\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  const navItems = [\n    { id: 'home', label: 'Início' },\n    { id: 'benefits', label: 'Benefícios' },\n    { id: 'cases', label: 'Cases' },\n    { id: 'process', label: 'Processo' },\n    { id: 'services', label: 'Serviços' },\n    { id: 'faq', label: 'FAQ' }\n  ];\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollTop = window.scrollY;\n      setIsScrolled(scrollTop > 50);\n\n      // Scrollspy logic\n      const sections = navItems.map(item => document.getElementById(item.id));\n      const currentSection = sections.find(section => {\n        if (!section) return false;\n        const rect = section.getBoundingClientRect();\n        return rect.top <= 100 && rect.bottom > 100;\n      });\n\n      if (currentSection) {\n        setActiveSection(currentSection.id);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    handleScroll(); // Call once to set initial state\n\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, [navItems]);\n\n  const scrollToSection = (sectionId) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <nav \n      className={`sticky-nav ${isScrolled ? 'sticky-nav--scrolled' : ''}`}\n      role=\"navigation\" \n      aria-label=\"Navegação principal\"\n    >\n      <div className=\"container\">\n        <div className=\"sticky-nav__content\">\n          <a \n            href=\"#home\" \n            className=\"sticky-nav__logo\"\n            onClick={(e) => {\n              e.preventDefault();\n              scrollToSection('home');\n            }}\n            aria-label=\"TeknoLab - Página inicial\"\n          >\n            {teks.nav.logo}\n          </a>\n          \n          <ul className=\"sticky-nav__links\" role=\"menubar\">\n            {navItems.map((item) => (\n              <li key={item.id} role=\"none\">\n                <button\n                  className={`sticky-nav__link ${activeSection === item.id ? 'sticky-nav__link--active' : ''}`}\n                  onClick={() => scrollToSection(item.id)}\n                  role=\"menuitem\"\n                  aria-label={`Navegar para ${item.label}`}\n                  aria-current={activeSection === item.id ? 'page' : undefined}\n                >\n                  {item.label}\n                </button>\n              </li>\n            ))}\n          </ul>\n          \n          <div className=\"sticky-nav__cta\">\n            <a\n              href=\"#cta\"\n              className=\"btn btn--primary btn--small\"\n              onClick={(e) => {\n                e.preventDefault();\n                scrollToSection('cta');\n              }}\n              aria-label=\"Começar agora\"\n            >\n              Começar\n            </a>\n          </div>\n          \n          <button \n            className=\"sticky-nav__toggle\"\n            aria-label=\"Abrir menu de navegação\"\n            aria-expanded=\"false\"\n            aria-controls=\"nav-menu\"\n          >\n            <span></span>\n            <span></span>\n            <span></span>\n          </button>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default StickyNavigation; "],"names":["StickyNavigation","activeSection","setActiveSection","useState","isScrolled","setIsScrolled","navItems","id","label","useEffect","handleScroll","scrollTop","window","scrollY","currentSection","map","item","document","getElementById","find","section","rect","getBoundingClientRect","top","bottom","addEventListener","removeEventListener","scrollToSection","sectionId","element","scrollIntoView","behavior","_jsx","className","concat","role","children","_jsxs","href","onClick","e","preventDefault","teks","nav","logo","undefined"],"sourceRoot":""}