name: Deploy to VPS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      env:
        REACT_APP_GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        REACT_APP_WHATSAPP_NUMBER: ${{ secrets.WHATSAPP_NUMBER }}
        REACT_APP_API_URL: ${{ secrets.GEMINI_API_URL }}
      
    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        script: |
          # Backup da versão atual
          if [ -d "/var/landing/backup" ]; then
            rm -rf /var/landing/backup
          fi
          if [ -d "/var/landing/current" ]; then
            mv /var/landing/current /var/landing/backup
          fi
          
          # Criar pasta temporária
          mkdir -p /var/landing/temp
          
    - name: Upload build files
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        source: "build/*"
        target: "/var/landing/temp"
        strip_components: 1
        
    - name: Activate new version
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        password: ${{ secrets.VPS_PASSWORD }}
        script: |
          # Substituir arquivos atuais
          rm -rf /var/landing/*
          mv /var/landing/temp/* /var/landing/
          rmdir /var/landing/temp
          
          # Ajustar permissões
          chown -R www-data:www-data /var/landing/
          chmod -R 755 /var/landing/
          
          # Reiniciar container da landing page
          docker restart seuagente-landing
          
          echo "Deploy concluído com sucesso!"
          echo "Site atualizado: https://seuagentewhatsapp.com.br" 